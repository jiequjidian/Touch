//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace QPCHARTModel
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class QPCHARTEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“QPCHARTEntities”部分中的连接字符串初始化新 QPCHARTEntities 对象。
        /// </summary>
        public QPCHARTEntities() : base("name=QPCHARTEntities", "QPCHARTEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 QPCHARTEntities 对象。
        /// </summary>
        public QPCHARTEntities(string connectionString) : base(connectionString, "QPCHARTEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 QPCHARTEntities 对象。
        /// </summary>
        public QPCHARTEntities(EntityConnection connection) : base(connection, "QPCHARTEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Menu> Menu
        {
            get
            {
                if ((_Menu == null))
                {
                    _Menu = base.CreateObjectSet<Menu>("Menu");
                }
                return _Menu;
            }
        }
        private ObjectSet<Menu> _Menu;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<SysUser> SysUser
        {
            get
            {
                if ((_SysUser == null))
                {
                    _SysUser = base.CreateObjectSet<SysUser>("SysUser");
                }
                return _SysUser;
            }
        }
        private ObjectSet<SysUser> _SysUser;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 Menu EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToMenu(Menu menu)
        {
            base.AddObject("Menu", menu);
        }
    
        /// <summary>
        /// 用于向 SysUser EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToSysUser(SysUser sysUser)
        {
            base.AddObject("SysUser", sysUser);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QPCHARTModel", Name="Menu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Menu : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Menu 对象。
        /// </summary>
        /// <param name="id">id 属性的初始值。</param>
        /// <param name="pId">pId 属性的初始值。</param>
        public static Menu CreateMenu(global::System.Int32 id, global::System.Int32 pId)
        {
            Menu menu = new Menu();
            menu.id = id;
            menu.pId = pId;
            return menu;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 pId
        {
            get
            {
                return _pId;
            }
            set
            {
                OnpIdChanging(value);
                ReportPropertyChanging("pId");
                _pId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("pId");
                OnpIdChanged();
            }
        }
        private global::System.Int32 _pId;
        partial void OnpIdChanging(global::System.Int32 value);
        partial void OnpIdChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> open
        {
            get
            {
                return _open;
            }
            set
            {
                OnopenChanging(value);
                ReportPropertyChanging("open");
                _open = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("open");
                OnopenChanged();
            }
        }
        private Nullable<global::System.Boolean> _open;
        partial void OnopenChanging(Nullable<global::System.Boolean> value);
        partial void OnopenChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String icon
        {
            get
            {
                return _icon;
            }
            set
            {
                OniconChanging(value);
                ReportPropertyChanging("icon");
                _icon = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("icon");
                OniconChanged();
            }
        }
        private global::System.String _icon;
        partial void OniconChanging(global::System.String value);
        partial void OniconChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String iconOpen
        {
            get
            {
                return _iconOpen;
            }
            set
            {
                OniconOpenChanging(value);
                ReportPropertyChanging("iconOpen");
                _iconOpen = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("iconOpen");
                OniconOpenChanged();
            }
        }
        private global::System.String _iconOpen;
        partial void OniconOpenChanging(global::System.String value);
        partial void OniconOpenChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String iconClose
        {
            get
            {
                return _iconClose;
            }
            set
            {
                OniconCloseChanging(value);
                ReportPropertyChanging("iconClose");
                _iconClose = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("iconClose");
                OniconCloseChanged();
            }
        }
        private global::System.String _iconClose;
        partial void OniconCloseChanging(global::System.String value);
        partial void OniconCloseChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> @checked
        {
            get
            {
                return _checked;
            }
            set
            {
                OncheckedChanging(value);
                ReportPropertyChanging("checked");
                _checked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("checked");
                OncheckedChanged();
            }
        }
        private Nullable<global::System.Boolean> _checked;
        partial void OncheckedChanging(Nullable<global::System.Boolean> value);
        partial void OncheckedChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> nocheck
        {
            get
            {
                return _nocheck;
            }
            set
            {
                OnnocheckChanging(value);
                ReportPropertyChanging("nocheck");
                _nocheck = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("nocheck");
                OnnocheckChanged();
            }
        }
        private Nullable<global::System.Boolean> _nocheck;
        partial void OnnocheckChanging(Nullable<global::System.Boolean> value);
        partial void OnnocheckChanged();

        #endregion

    
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QPCHARTModel", Name="SysUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysUser : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 SysUser 对象。
        /// </summary>
        /// <param name="yongHu">YongHu 属性的初始值。</param>
        /// <param name="miMa">MiMa 属性的初始值。</param>
        public static SysUser CreateSysUser(global::System.String yongHu, global::System.String miMa)
        {
            SysUser sysUser = new SysUser();
            sysUser.YongHu = yongHu;
            sysUser.MiMa = miMa;
            return sysUser;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YongHu
        {
            get
            {
                return _YongHu;
            }
            set
            {
                if (_YongHu != value)
                {
                    OnYongHuChanging(value);
                    ReportPropertyChanging("YongHu");
                    _YongHu = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("YongHu");
                    OnYongHuChanged();
                }
            }
        }
        private global::System.String _YongHu;
        partial void OnYongHuChanging(global::System.String value);
        partial void OnYongHuChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MiMa
        {
            get
            {
                return _MiMa;
            }
            set
            {
                OnMiMaChanging(value);
                ReportPropertyChanging("MiMa");
                _MiMa = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MiMa");
                OnMiMaChanged();
            }
        }
        private global::System.String _MiMa;
        partial void OnMiMaChanging(global::System.String value);
        partial void OnMiMaChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _Level;
        partial void OnLevelChanging(Nullable<global::System.Int32> value);
        partial void OnLevelChanged();

        #endregion

    
    }

    #endregion

    
}
